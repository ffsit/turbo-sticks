name: tests
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get install libpq-dev postgresql postgresql-contrib redis-server
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: |
          echo "CODECOV_BRANCH=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" \
               >> $GITHUB_ENV
      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: |
          echo "CODECOV_BRANCH=$(echo ${GITHUB_HEAD_REF} | tr / -)" \
               >> $GITHUB_ENV
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install python packages
        run: |
          python -m pip install uv
          uv pip install -r test_requirements.txt pytest-codecov[git]==0.7.0
      - name: Lint with flake8
        id: lint
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Security check using bandit
        id: bandit
        run: bandit -r src -c pyproject.toml
      - name: Test with pytest
        run: pytest-gevent --codecov --codecov-token=${{ secrets.CODECOV_TOKEN }}
        if: ${{ steps.lint.conclusion == 'success' }}
      - name: Static type checking with mypy
        run: |
          # run static type checks on package
          mypy -p turbo_sticks
          # run static type checks on wsgi script
          mypy turbo-sticks.wsgi
        if: ${{ steps.lint.conclusion == 'success' }}
